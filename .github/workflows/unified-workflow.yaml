name: Certeasy-CI

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: certeasy
  TARGET_VERSION: 1.0.0-RELEASE

on:
  pull_request:
    types:
      - opened
      - edited
    paths:
      - 'certeasy-core/**'
      - 'certeasy-bouncycastle/**'
      - 'certeasy-backend-app/**'
      - 'certeasy_api_tests/**'
      - 'certeasy-console-app/**'
      - '.github/workflows/unified-workflow.yaml'
  push:
    paths:
      - 'certeasy-core/**'
      - 'certeasy-bouncycastle/**'
      - 'certeasy-backend-app/**'
      - 'certeasy_api_tests/**'
      - 'certeasy-console-app/**'
      - '.github/workflows/unified-workflow.yaml'

jobs:

  build-core:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./certeasy-core
    permissions:
      contents: read
      packages: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Unit tests
        run: mvn clean test --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=certeasy-core -Dsonar.branch.name=${GITHUB_REF_NAME}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_CORE_TOKEN }}
      - name: Archive Test Reports
        uses: actions/upload-artifact@v3
        with:
            name: target
            path: |
                certeasy-core/target/surefire-reports
                certeasy-core/target/jacoco-report
      - name: Report test results
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
            name: Core Test Results
            path: certeasy-core/target/surefire-reports/TEST-*.xml
            reporter: java-junit
      - name: Maven package
        run: mvn --batch-mode package install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_CORE_TOKEN }}
      - name: Upload certeasy-core
        uses: actions/upload-artifact@v3
        with:
          name: certeasy-core
          path: ~/.m2/repository/org/certeasy/certeasy-core

  build-bouncycastle:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./certeasy-bouncycastle
    permissions:
      contents: read
      packages: write
      checks: write
    needs: ["build-core"]
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Download certeasy-core
        uses: actions/download-artifact@v3
        with:
          name: certeasy-core
          path: ~/.m2/repository/org/certeasy/certeasy-core
      - name: Run Unit Tests
        run: mvn test --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=certeasy-bouncycastle -Dsonar.branch.name=${GITHUB_REF_NAME}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_BOUNCYCASTLE_TOKEN }}
      - name: Archive Test Reports
        uses: actions/upload-artifact@v3
        with:
            name: target
            path: |
                certeasy-bouncycastle/target/surefire-reports
                certeasy-bouncycastle/target/jacoco-report
      - name: Report test results
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
            name: BouncyCastle Test Results
            path: certeasy-bouncycastle/target/surefire-reports/TEST-*.xml
            reporter: java-junit
      - name: Maven package
        run: mvn --batch-mode package install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload certeasy-bouncycastle
        uses: actions/upload-artifact@v3
        with:
          name: certeasy-bouncycastle
          path: ~/.m2/repository/org/certeasy/certeasy-bouncycastle

  build-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      checks: write
    defaults:
      run:
        working-directory: ./certeasy-backend-app
    needs: ["build-core", "build-bouncycastle"]
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Download certeasy-core
        uses: actions/download-artifact@v2
        with:
          name: certeasy-core
          path: ~/.m2/repository/org/certeasy/certeasy-core
      - name: Download bouncycastle
        uses: actions/download-artifact@v3
        with:
          name: certeasy-bouncycastle
          path: ~/.m2/repository/org/certeasy/certeasy-bouncycastle
      - name: Run Unit tests
        run: mvn test --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=certeasy-backend -Dsonar.branch.name=${GITHUB_REF_NAME}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_BACKEND_TOKEN }}
      - name: Package Test Reports
        uses: actions/upload-artifact@v3
        with:
            name: target
            path: |
              certeasy-backend-app/target/surefire-reports
              certeasy-backend-app/target/jacoco-report
      - name: Report test results
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
          name: Backend-app Test Results
          path: certeasy-backend-app/target/surefire-reports/TEST-*.xml
          reporter: java-junit

      - name: Build native-image
        run: |
          ./mvnw package -Pnative -Dquarkus.native.container-build=true -DskipTests
      - name: Upload certeasy-binary
        uses: actions/upload-artifact@v3
        with:
          name: certeasy-binary
          path: |
            certeasy-backend-app/target/certeasy-backend-app-**-runner

  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: ["build-binary"]
    outputs:
      image_tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Download certeasy-binary
        uses: actions/download-artifact@v3
        with:
          name: certeasy-binary
      - name: Make binary executable
        run: find . -name "*-runner" -exec chmod +x {} \;
      - name: Generate Image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          outputs: type=docker,dest=/tmp/${{ env.IMAGE_NAME }}.tar
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Upload image tar file
        uses: actions/upload-artifact@v3
        with:
          name: image-tar
          path: /tmp/${{ env.IMAGE_NAME }}.tar

  run-api-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: ["build-image"]
    env:
      DOCKER_IMAGE_NAME: ${{ needs.build-image.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Download certeasy-binary
        uses: actions/download-artifact@v3
        with:
          name: certeasy-binary
          path: ./
      - name: Download image tar file
        uses: actions/download-artifact@v3
        with:
          name: image-tar
          path: /tmp
      - name: Load docker image tar
        run: |
            docker load --input /tmp/${{ env.IMAGE_NAME }}.tar
            docker image ls -a
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r certeasy_api_tests/requirements.txt
      - name: Run tests
        run: pytest certeasy_api_tests/src/tests --junitxml=certeasy_api_tests/target/report.xml
      - name: Package Test Reports
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: target
          path: |
            certeasy_api_tests/target
      - name: Report test results
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
          name: Integration Test Results
          path: certeasy_api_tests/target/report.xml
          reporter: java-junit

  publish-develop-image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    permissions:
      contents: read
      packages: write
    needs: [ "build-binary", "run-api-tests" ]
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Download certeasy-binary
        uses: actions/download-artifact@v3
        with:
          name: certeasy-binary
      - name: Make binary executable
        run: find . -name "*-runner" -exec chmod +x {} \;
      - name: Registry login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Image build and push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop
          labels: ${{ steps.meta.outputs.labels }}


  release-core:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [ "publish-develop-image" ]
    defaults:
      run:
        working-directory: ./certeasy-core
    permissions:
      contents: read
      packages: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Maven deploy
        run: mvn --batch-mode deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_CORE_TOKEN }}

  release-bouncycastle:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [ "publish-develop-image", "release-core" ]
    defaults:
      run:
        working-directory: ./certeasy-bouncycastle
    permissions:
      contents: read
      packages: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Maven package
        run: mvn --batch-mode deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    needs: [ "build-binary", "run-api-tests", "release-core", "release-bouncycastle" ]
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Download certeasy-binary
        uses: actions/download-artifact@v3
        with:
          name: certeasy-binary
      - name: Make binary executable
        run: find . -name "*-runner" -exec chmod +x {} \;
      - name: Registry login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Image build and push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}