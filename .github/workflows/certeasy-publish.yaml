name: certeasy-publish

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:

  push:
    paths:
      - 'certeasy-core/**'
      - 'certeasy-bouncycastle/**'
      - 'certeasy-backend-app/**'
      - 'certeasy_api_tests/**'
      - 'certeasy-console-app/**'
      - '.github/workflows/certeasy-publish.yaml'
    branches:
      - main
      - develop

jobs:

  build-core:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./certeasy-core
    permissions:
      contents: read
      packages: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Maven Test
        run: mvn clean test --batch-mode
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive Test Reports
        uses: actions/upload-artifact@v3
        with:
            name: target
            path: |
                certeasy-core/target/surefire-reports
                certeasy-core/target/jacoco-report
      - name: Test Reporter
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
            name: Core Test Results
            path: certeasy-core/target/surefire-reports/TEST-*.xml
            reporter: java-junit
      - name: Sonar Report
        run: |
            mvn test org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=certeasy-core
#             -Dsonar.branch.name=${GITHUB_REF##*/} \
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_CORE_TOKEN }}
      - name: Maven build
        run: mvn --batch-mode package -DskipTests
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Maven deploy
        run: mvn --batch-mode deploy
        if: ${{ github.event_name != 'pull_request' }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-bouncycastle:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./certeasy-bouncycastle
    permissions:
      contents: read
      packages: write
      checks: write
    needs: ["build-core"]
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Maven Test
        run: mvn clean test --batch-mode
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive Test Reports
        uses: actions/upload-artifact@v3
        with:
            name: target
            path: |
                certeasy-bouncycastle/target/surefire-reports
                certeasy-bouncycastle/target/jacoco-report
      - name: Test Reporter
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
            name: BouncyCastle Test Results
            path: certeasy-bouncycastle/target/surefire-reports/TEST-*.xml
            reporter: java-junit
      - name: Sonar Report
        run: |
            mvn test org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=certeasy-bouncycastle
#             -Dsonar.branch.name=${GITHUB_REF##*/} \
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_BOUNCYCASTLE_TOKEN }}
      - name: Maven build
        run: mvn --batch-mode package -DskipTests
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Maven deploy
        run: mvn --batch-mode deploy
        if: ${{ github.event_name != 'pull_request' }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      checks: write
    defaults:
      run:
        working-directory: ./certeasy-backend-app
    needs: ["build-core", "build-bouncycastle"]
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Maven Test
        run: mvn clean test --batch-mode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: |
            certeasy-backend-app/target/surefire-reports
            certeasy-backend-app/target/jacoco-report
      - name: Test Reporter
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
            name: Backend App Test Results
            path: certeasy-backend-app/target/surefire-reports/TEST-*.xml
            reporter: java-junit
      - name: Sonar Report
        run: |
            mvn test org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=certeasy-backend
#             -Dsonar.branch.name=${GITHUB_REF##*/} \
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_BACKEND_TOKEN }}
      - name: Maven build
        run: mvn --batch-mode package -DskipTests
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build binary
        run: |
          ./mvnw package -DskipTests -Pnative -Dquarkus.native.container-build=true
      - name: Upload certeasy-binary
        uses: actions/upload-artifact@v3
        with:
          name: certeasy-binary
          path: |
            certeasy-backend-app/target/certeasy-backend-app-**-runner

  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ "build-binary" ]
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
        name: Git checkout
      - name: Download certeasy-binary
        uses: actions/download-artifact@v3
        with:
          name: certeasy-binary
      - name: Make binary executable
        run: find . -name "*-runner" -exec chmod +x {} \;
      - name: Registry login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Image build and push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run-api-tests:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      needs: ["build-image"]
      env:
        DOCKER_IMAGE_NAME: ${{ needs.build-image.outputs.image_tag }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
        - name: Install dependencies
          run: pip install -r certeasy_api_tests/requirements.txt
        - name: Run tests
          run: pytest certeasy_api_tests/src/tests